#line 1 "tiger.y"

#include <stdio.h>
#include <stdlib.h>
#include "../../../Compiler/HEADER_FILES/util.h"
#include "../../../Compiler/HEADER_FILES/errormsg.h"
#include "../../../Compiler/HEADER_FILES/symbol.h" 
#include "../../../Compiler/HEADER_FILES/absyn.h"

#define alloca malloc

int yylex(void); /* function prototype */

A_exp absyn_root;

void yyerror(char *s)
{
 EM_error(EM_tokPos, "%s", s);
}

#line 22 "tiger.y"
typedef union
{
	int			pos;
	int			ival;
	float		fval;
	string		sval;
	A_var		var;
	A_exp		exp;
	A_dec		dec;
	A_decList	decList;
	A_expList	expList;
	A_fieldList	fieldList;

	struct
	{
		union
		{
			int			ival;
			float		fval;
			string		sval;
			A_var		var;
			A_exp		exp;
			A_dec		dec;
			A_decList	decList;
			A_expList	expList;
			A_fieldList	fieldList;
		}
		gval;
		
		int type;
	}
	xval;
} YYSTYPE;
