

Terminals which are not used:

   FLOAT
   STRING
   ID
   PLUS
   MINUS
   AND
   OR



Grammar
rule 1    program -> expList
rule 2    expList -> exp expList
rule 3    expList -> exp
rule 4    exp -> labelExp
rule 5    exp -> jumpExp
rule 6    exp -> cjumpExp
rule 7    exp -> loadExp
rule 8    exp -> storeExp
rule 9    exp -> binopExp
rule 10   exp -> movExp
rule 11   exp -> PRINT_INT
rule 12   exp -> PRINT_CHAR
rule 13   exp -> ALLOCATE
rule 14   exp -> EXIT
rule 15   labelExp -> LABEL COLON
rule 16   jumpExp -> JUMP LABEL
rule 17   jumpExp -> JUMP REGISTER
rule 18   jumpExp -> JUMP_AND_LINK LABEL
rule 19   cjumpExp -> BEQ var COMMA var COMMA LABEL
rule 20   cjumpExp -> BNE var COMMA var COMMA LABEL
rule 21   cjumpExp -> BGT var COMMA var COMMA LABEL
rule 22   cjumpExp -> BLT var COMMA var COMMA LABEL
rule 23   cjumpExp -> BGE var COMMA var COMMA LABEL
rule 24   cjumpExp -> BLE var COMMA var COMMA LABEL
rule 25   loadExp -> LOAD var COMMA INT LPAREN var RPAREN
rule 26   loadExp -> LOAD_IMMEDIATE var COMMA INT
rule 27   storeExp -> STORE var COMMA INT LPAREN var RPAREN
rule 28   binopExp -> ADD var COMMA var COMMA var
rule 29   binopExp -> SUB var COMMA var COMMA var
rule 30   binopExp -> MUL var COMMA var COMMA var
rule 31   binopExp -> DIV var COMMA var COMMA var
rule 32   binopExp -> ADD_IMMEDIATE var COMMA var COMMA INT
rule 33   movExp -> MOVE var COMMA var
rule 34   var -> TEMP
rule 35   var -> REGISTER

Terminals, with rules where they appear

$ (-1)
error (256)
INT (258) 25 26 27 32
FLOAT (259)
STRING (260)
PRINT_INT (261) 11
PRINT_CHAR (262) 12
ALLOCATE (263) 13
EXIT (264) 14
ID (265)
LABEL (266) 15 16 18 19 20 21 22 23 24
COMMA (267) 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
COLON (268) 15
LOAD (269) 25
STORE (270) 27
LOAD_IMMEDIATE (271) 26
ADD_IMMEDIATE (272) 32
JUMP (273) 16 17
JUMP_AND_LINK (274) 18
LPAREN (275) 25 27
RPAREN (276) 25 27
PLUS (277)
MINUS (278)
ADD (279) 28
SUB (280) 29
MUL (281) 30
DIV (282) 31
TEMP (283) 34
BEQ (284) 19
BNE (285) 20
BLT (286) 22
BLE (287) 24
BGT (288) 21
BGE (289) 23
REGISTER (290) 17 35
AND (291)
OR (292)
MOVE (293) 33

Nonterminals, with rules where they appear

program (39)
    on left: 1
expList (40)
    on left: 2 3, on right: 1 2
exp (41)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 3
labelExp (42)
    on left: 15, on right: 4
jumpExp (43)
    on left: 16 17 18, on right: 5
cjumpExp (44)
    on left: 19 20 21 22 23 24, on right: 6
loadExp (45)
    on left: 25 26, on right: 7
storeExp (46)
    on left: 27, on right: 8
binopExp (47)
    on left: 28 29 30 31 32, on right: 9
movExp (48)
    on left: 33, on right: 10
var (49)
    on left: 34 35, on right: 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33


state 0

    PRINT_INT	shift, and go to state 1
    PRINT_CHAR	shift, and go to state 2
    ALLOCATE	shift, and go to state 3
    EXIT	shift, and go to state 4
    LABEL	shift, and go to state 5
    LOAD	shift, and go to state 6
    STORE	shift, and go to state 7
    LOAD_IMMEDIATE	shift, and go to state 8
    ADD_IMMEDIATE	shift, and go to state 9
    JUMP	shift, and go to state 10
    JUMP_AND_LINK	shift, and go to state 11
    ADD 	shift, and go to state 12
    SUB 	shift, and go to state 13
    MUL 	shift, and go to state 14
    DIV 	shift, and go to state 15
    BEQ 	shift, and go to state 16
    BNE 	shift, and go to state 17
    BLT 	shift, and go to state 18
    BLE 	shift, and go to state 19
    BGT 	shift, and go to state 20
    BGE 	shift, and go to state 21
    MOVE	shift, and go to state 22

    program	go to state 112
    expList	go to state 23
    exp 	go to state 24
    labelExp	go to state 25
    jumpExp	go to state 26
    cjumpExp	go to state 27
    loadExp	go to state 28
    storeExp	go to state 29
    binopExp	go to state 30
    movExp	go to state 31



state 1

    exp  ->  PRINT_INT .   (rule 11)

    $default	reduce using rule 11 (exp)



state 2

    exp  ->  PRINT_CHAR .   (rule 12)

    $default	reduce using rule 12 (exp)



state 3

    exp  ->  ALLOCATE .   (rule 13)

    $default	reduce using rule 13 (exp)



state 4

    exp  ->  EXIT .   (rule 14)

    $default	reduce using rule 14 (exp)



state 5

    labelExp  ->  LABEL . COLON   (rule 15)

    COLON	shift, and go to state 32



state 6

    loadExp  ->  LOAD . var COMMA INT LPAREN var RPAREN   (rule 25)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 35



state 7

    storeExp  ->  STORE . var COMMA INT LPAREN var RPAREN   (rule 27)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 36



state 8

    loadExp  ->  LOAD_IMMEDIATE . var COMMA INT   (rule 26)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 37



state 9

    binopExp  ->  ADD_IMMEDIATE . var COMMA var COMMA INT   (rule 32)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 38



state 10

    jumpExp  ->  JUMP . LABEL   (rule 16)
    jumpExp  ->  JUMP . REGISTER   (rule 17)

    LABEL	shift, and go to state 39
    REGISTER	shift, and go to state 40



state 11

    jumpExp  ->  JUMP_AND_LINK . LABEL   (rule 18)

    LABEL	shift, and go to state 41



state 12

    binopExp  ->  ADD . var COMMA var COMMA var   (rule 28)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 42



state 13

    binopExp  ->  SUB . var COMMA var COMMA var   (rule 29)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 43



state 14

    binopExp  ->  MUL . var COMMA var COMMA var   (rule 30)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 44



state 15

    binopExp  ->  DIV . var COMMA var COMMA var   (rule 31)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 45



state 16

    cjumpExp  ->  BEQ . var COMMA var COMMA LABEL   (rule 19)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 46



state 17

    cjumpExp  ->  BNE . var COMMA var COMMA LABEL   (rule 20)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 47



state 18

    cjumpExp  ->  BLT . var COMMA var COMMA LABEL   (rule 22)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 48



state 19

    cjumpExp  ->  BLE . var COMMA var COMMA LABEL   (rule 24)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 49



state 20

    cjumpExp  ->  BGT . var COMMA var COMMA LABEL   (rule 21)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 50



state 21

    cjumpExp  ->  BGE . var COMMA var COMMA LABEL   (rule 23)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 51



state 22

    movExp  ->  MOVE . var COMMA var   (rule 33)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 52



state 23

    program  ->  expList .   (rule 1)

    $default	reduce using rule 1 (program)



state 24

    expList  ->  exp . expList   (rule 2)
    expList  ->  exp .   (rule 3)

    PRINT_INT	shift, and go to state 1
    PRINT_CHAR	shift, and go to state 2
    ALLOCATE	shift, and go to state 3
    EXIT	shift, and go to state 4
    LABEL	shift, and go to state 5
    LOAD	shift, and go to state 6
    STORE	shift, and go to state 7
    LOAD_IMMEDIATE	shift, and go to state 8
    ADD_IMMEDIATE	shift, and go to state 9
    JUMP	shift, and go to state 10
    JUMP_AND_LINK	shift, and go to state 11
    ADD 	shift, and go to state 12
    SUB 	shift, and go to state 13
    MUL 	shift, and go to state 14
    DIV 	shift, and go to state 15
    BEQ 	shift, and go to state 16
    BNE 	shift, and go to state 17
    BLT 	shift, and go to state 18
    BLE 	shift, and go to state 19
    BGT 	shift, and go to state 20
    BGE 	shift, and go to state 21
    MOVE	shift, and go to state 22

    $default	reduce using rule 3 (expList)

    expList	go to state 53
    exp 	go to state 24
    labelExp	go to state 25
    jumpExp	go to state 26
    cjumpExp	go to state 27
    loadExp	go to state 28
    storeExp	go to state 29
    binopExp	go to state 30
    movExp	go to state 31



state 25

    exp  ->  labelExp .   (rule 4)

    $default	reduce using rule 4 (exp)



state 26

    exp  ->  jumpExp .   (rule 5)

    $default	reduce using rule 5 (exp)



state 27

    exp  ->  cjumpExp .   (rule 6)

    $default	reduce using rule 6 (exp)



state 28

    exp  ->  loadExp .   (rule 7)

    $default	reduce using rule 7 (exp)



state 29

    exp  ->  storeExp .   (rule 8)

    $default	reduce using rule 8 (exp)



state 30

    exp  ->  binopExp .   (rule 9)

    $default	reduce using rule 9 (exp)



state 31

    exp  ->  movExp .   (rule 10)

    $default	reduce using rule 10 (exp)



state 32

    labelExp  ->  LABEL COLON .   (rule 15)

    $default	reduce using rule 15 (labelExp)



state 33

    var  ->  TEMP .   (rule 34)

    $default	reduce using rule 34 (var)



state 34

    var  ->  REGISTER .   (rule 35)

    $default	reduce using rule 35 (var)



state 35

    loadExp  ->  LOAD var . COMMA INT LPAREN var RPAREN   (rule 25)

    COMMA	shift, and go to state 54



state 36

    storeExp  ->  STORE var . COMMA INT LPAREN var RPAREN   (rule 27)

    COMMA	shift, and go to state 55



state 37

    loadExp  ->  LOAD_IMMEDIATE var . COMMA INT   (rule 26)

    COMMA	shift, and go to state 56



state 38

    binopExp  ->  ADD_IMMEDIATE var . COMMA var COMMA INT   (rule 32)

    COMMA	shift, and go to state 57



state 39

    jumpExp  ->  JUMP LABEL .   (rule 16)

    $default	reduce using rule 16 (jumpExp)



state 40

    jumpExp  ->  JUMP REGISTER .   (rule 17)

    $default	reduce using rule 17 (jumpExp)



state 41

    jumpExp  ->  JUMP_AND_LINK LABEL .   (rule 18)

    $default	reduce using rule 18 (jumpExp)



state 42

    binopExp  ->  ADD var . COMMA var COMMA var   (rule 28)

    COMMA	shift, and go to state 58



state 43

    binopExp  ->  SUB var . COMMA var COMMA var   (rule 29)

    COMMA	shift, and go to state 59



state 44

    binopExp  ->  MUL var . COMMA var COMMA var   (rule 30)

    COMMA	shift, and go to state 60



state 45

    binopExp  ->  DIV var . COMMA var COMMA var   (rule 31)

    COMMA	shift, and go to state 61



state 46

    cjumpExp  ->  BEQ var . COMMA var COMMA LABEL   (rule 19)

    COMMA	shift, and go to state 62



state 47

    cjumpExp  ->  BNE var . COMMA var COMMA LABEL   (rule 20)

    COMMA	shift, and go to state 63



state 48

    cjumpExp  ->  BLT var . COMMA var COMMA LABEL   (rule 22)

    COMMA	shift, and go to state 64



state 49

    cjumpExp  ->  BLE var . COMMA var COMMA LABEL   (rule 24)

    COMMA	shift, and go to state 65



state 50

    cjumpExp  ->  BGT var . COMMA var COMMA LABEL   (rule 21)

    COMMA	shift, and go to state 66



state 51

    cjumpExp  ->  BGE var . COMMA var COMMA LABEL   (rule 23)

    COMMA	shift, and go to state 67



state 52

    movExp  ->  MOVE var . COMMA var   (rule 33)

    COMMA	shift, and go to state 68



state 53

    expList  ->  exp expList .   (rule 2)

    $default	reduce using rule 2 (expList)



state 54

    loadExp  ->  LOAD var COMMA . INT LPAREN var RPAREN   (rule 25)

    INT 	shift, and go to state 69



state 55

    storeExp  ->  STORE var COMMA . INT LPAREN var RPAREN   (rule 27)

    INT 	shift, and go to state 70



state 56

    loadExp  ->  LOAD_IMMEDIATE var COMMA . INT   (rule 26)

    INT 	shift, and go to state 71



state 57

    binopExp  ->  ADD_IMMEDIATE var COMMA . var COMMA INT   (rule 32)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 72



state 58

    binopExp  ->  ADD var COMMA . var COMMA var   (rule 28)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 73



state 59

    binopExp  ->  SUB var COMMA . var COMMA var   (rule 29)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 74



state 60

    binopExp  ->  MUL var COMMA . var COMMA var   (rule 30)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 75



state 61

    binopExp  ->  DIV var COMMA . var COMMA var   (rule 31)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 76



state 62

    cjumpExp  ->  BEQ var COMMA . var COMMA LABEL   (rule 19)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 77



state 63

    cjumpExp  ->  BNE var COMMA . var COMMA LABEL   (rule 20)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 78



state 64

    cjumpExp  ->  BLT var COMMA . var COMMA LABEL   (rule 22)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 79



state 65

    cjumpExp  ->  BLE var COMMA . var COMMA LABEL   (rule 24)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 80



state 66

    cjumpExp  ->  BGT var COMMA . var COMMA LABEL   (rule 21)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 81



state 67

    cjumpExp  ->  BGE var COMMA . var COMMA LABEL   (rule 23)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 82



state 68

    movExp  ->  MOVE var COMMA . var   (rule 33)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 83



state 69

    loadExp  ->  LOAD var COMMA INT . LPAREN var RPAREN   (rule 25)

    LPAREN	shift, and go to state 84



state 70

    storeExp  ->  STORE var COMMA INT . LPAREN var RPAREN   (rule 27)

    LPAREN	shift, and go to state 85



state 71

    loadExp  ->  LOAD_IMMEDIATE var COMMA INT .   (rule 26)

    $default	reduce using rule 26 (loadExp)



state 72

    binopExp  ->  ADD_IMMEDIATE var COMMA var . COMMA INT   (rule 32)

    COMMA	shift, and go to state 86



state 73

    binopExp  ->  ADD var COMMA var . COMMA var   (rule 28)

    COMMA	shift, and go to state 87



state 74

    binopExp  ->  SUB var COMMA var . COMMA var   (rule 29)

    COMMA	shift, and go to state 88



state 75

    binopExp  ->  MUL var COMMA var . COMMA var   (rule 30)

    COMMA	shift, and go to state 89



state 76

    binopExp  ->  DIV var COMMA var . COMMA var   (rule 31)

    COMMA	shift, and go to state 90



state 77

    cjumpExp  ->  BEQ var COMMA var . COMMA LABEL   (rule 19)

    COMMA	shift, and go to state 91



state 78

    cjumpExp  ->  BNE var COMMA var . COMMA LABEL   (rule 20)

    COMMA	shift, and go to state 92



state 79

    cjumpExp  ->  BLT var COMMA var . COMMA LABEL   (rule 22)

    COMMA	shift, and go to state 93



state 80

    cjumpExp  ->  BLE var COMMA var . COMMA LABEL   (rule 24)

    COMMA	shift, and go to state 94



state 81

    cjumpExp  ->  BGT var COMMA var . COMMA LABEL   (rule 21)

    COMMA	shift, and go to state 95



state 82

    cjumpExp  ->  BGE var COMMA var . COMMA LABEL   (rule 23)

    COMMA	shift, and go to state 96



state 83

    movExp  ->  MOVE var COMMA var .   (rule 33)

    $default	reduce using rule 33 (movExp)



state 84

    loadExp  ->  LOAD var COMMA INT LPAREN . var RPAREN   (rule 25)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 97



state 85

    storeExp  ->  STORE var COMMA INT LPAREN . var RPAREN   (rule 27)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 98



state 86

    binopExp  ->  ADD_IMMEDIATE var COMMA var COMMA . INT   (rule 32)

    INT 	shift, and go to state 99



state 87

    binopExp  ->  ADD var COMMA var COMMA . var   (rule 28)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 100



state 88

    binopExp  ->  SUB var COMMA var COMMA . var   (rule 29)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 101



state 89

    binopExp  ->  MUL var COMMA var COMMA . var   (rule 30)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 102



state 90

    binopExp  ->  DIV var COMMA var COMMA . var   (rule 31)

    TEMP	shift, and go to state 33
    REGISTER	shift, and go to state 34

    var 	go to state 103



state 91

    cjumpExp  ->  BEQ var COMMA var COMMA . LABEL   (rule 19)

    LABEL	shift, and go to state 104



state 92

    cjumpExp  ->  BNE var COMMA var COMMA . LABEL   (rule 20)

    LABEL	shift, and go to state 105



state 93

    cjumpExp  ->  BLT var COMMA var COMMA . LABEL   (rule 22)

    LABEL	shift, and go to state 106



state 94

    cjumpExp  ->  BLE var COMMA var COMMA . LABEL   (rule 24)

    LABEL	shift, and go to state 107



state 95

    cjumpExp  ->  BGT var COMMA var COMMA . LABEL   (rule 21)

    LABEL	shift, and go to state 108



state 96

    cjumpExp  ->  BGE var COMMA var COMMA . LABEL   (rule 23)

    LABEL	shift, and go to state 109



state 97

    loadExp  ->  LOAD var COMMA INT LPAREN var . RPAREN   (rule 25)

    RPAREN	shift, and go to state 110



state 98

    storeExp  ->  STORE var COMMA INT LPAREN var . RPAREN   (rule 27)

    RPAREN	shift, and go to state 111



state 99

    binopExp  ->  ADD_IMMEDIATE var COMMA var COMMA INT .   (rule 32)

    $default	reduce using rule 32 (binopExp)



state 100

    binopExp  ->  ADD var COMMA var COMMA var .   (rule 28)

    $default	reduce using rule 28 (binopExp)



state 101

    binopExp  ->  SUB var COMMA var COMMA var .   (rule 29)

    $default	reduce using rule 29 (binopExp)



state 102

    binopExp  ->  MUL var COMMA var COMMA var .   (rule 30)

    $default	reduce using rule 30 (binopExp)



state 103

    binopExp  ->  DIV var COMMA var COMMA var .   (rule 31)

    $default	reduce using rule 31 (binopExp)



state 104

    cjumpExp  ->  BEQ var COMMA var COMMA LABEL .   (rule 19)

    $default	reduce using rule 19 (cjumpExp)



state 105

    cjumpExp  ->  BNE var COMMA var COMMA LABEL .   (rule 20)

    $default	reduce using rule 20 (cjumpExp)



state 106

    cjumpExp  ->  BLT var COMMA var COMMA LABEL .   (rule 22)

    $default	reduce using rule 22 (cjumpExp)



state 107

    cjumpExp  ->  BLE var COMMA var COMMA LABEL .   (rule 24)

    $default	reduce using rule 24 (cjumpExp)



state 108

    cjumpExp  ->  BGT var COMMA var COMMA LABEL .   (rule 21)

    $default	reduce using rule 21 (cjumpExp)



state 109

    cjumpExp  ->  BGE var COMMA var COMMA LABEL .   (rule 23)

    $default	reduce using rule 23 (cjumpExp)



state 110

    loadExp  ->  LOAD var COMMA INT LPAREN var RPAREN .   (rule 25)

    $default	reduce using rule 25 (loadExp)



state 111

    storeExp  ->  STORE var COMMA INT LPAREN var RPAREN .   (rule 27)

    $default	reduce using rule 27 (storeExp)



state 112

    $   	go to state 113



state 113

    $   	go to state 114



state 114

    $default	accept
